services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: jeongeoneya0831!
      MYSQL_DATABASE: reper
      MYSQL_USER: ssafy
      MYSQL_PASSWORD: jeongeoneya0831!
    ports:
      - "13790:3306"
    volumes:
      - mysql_data:/var/lib/mysql  # MySQL 데이터 저장
      - mysql_config:/etc/mysql/conf.d  # MySQL 설정 파일 저장
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1  # 최신 버전 적용
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false  # TLS(SSL) 활성화
      - ES_JAVA_OPTS=-Xms512m -Xmx15g
    ports:
      - "23159:9200"
    volumes:
      - elastic_data:/elasticsearch/data
      - elasticsearch_logs:/elasticsearch/logs:rw

    networks:
      - elastic_network

  app:
    image: reper-server
    container_name: reper-server
    build:
      context: ./reper
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://i12d109.p.ssafy.io:13790/reper?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ssafy
      SPRING_DATASOURCE_PASSWORD: jeongeoneya0831!
    ports:
      - "48620:8080"
    depends_on:
      - mysql
    volumes:
      - app_logs:/app/logs  # Spring Boot 로그 저장
    networks:
      - app-network
  
  pdf-server:
    image: pdf-server
    container_name: pdf-server
    build:
      context: ./pdf
      dockerfile: Dockerfile
    restart: always
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "20250:20250"
    depends_on:
      - app
    networks:
      - app-network

volumes:
  mysql_data:  # MySQL 데이터 저장 볼륨
  mysql_config:  # MySQL 설정 파일 저장 볼륨
  app_logs:  # Spring Boot 애플리케이션 로그 저장 볼륨
  elastic_data:
  elasticsearch_logs:

networks:
  app-network:
  elastic_network:
    driver: bridge