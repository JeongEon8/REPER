version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password  # 시크릿 파일로 MySQL 루트 비밀번호 지정
      MYSQL_DATABASE: reper
      MYSQL_USER: ssafy
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password  # 시크릿 파일로 MySQL 사용자 비밀번호 지정
    ports:
      - "13790:3306"
    volumes:
      - mysql_data:/var/lib/mysql  # MySQL 데이터 저장
      - mysql_config:/etc/mysql/conf.d  # MySQL 설정 파일 저장
    networks:
      - app-network
    secrets:
      - mysql_root_password
      - mysql_password

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx15g
    ports:
      - "23159:9200"
    volumes:
      - elastic_data:/elasticsearch/data
      - elasticsearch_logs:/elasticsearch/logs:rw
    networks:
      - elastic_network
    command: >
      bash -c "
      if [ ! -d /usr/share/elasticsearch/plugins/analysis-nori ]; then
        elasticsearch-plugin install analysis-nori --batch;
      fi;
      /usr/local/bin/docker-entrypoint.sh eswrapper"
    secrets:
      - elasticsearch_password

  app:
    image: reper-server
    container_name: reper-server
    build:
      context: ./reper
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://i12d109.p.ssafy.io:13790/reper?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ssafy
      SPRING_DATASOURCE_PASSWORD_FILE: /run/secrets/mysql_password  # MySQL 비밀번호 시크릿 사용
      FIREBASE_JSON_FILE: /run/secrets/firebase_json  # Firebase JSON 파일 시크릿 사용
    ports:
      - "48620:8080"
    depends_on:
      - mysql
    volumes:
      - app_logs:/app/logs
    networks:
      - app-network
    secrets:
      - mysql_password
      - firebase_json

  pdf-server:
    image: pdf-server
    container_name: pdf-server
    build:
      context: ./pdf
      dockerfile: Dockerfile
    restart: always
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}  # 환경 변수를 통해 OpenAI API 키 전달
    ports:
      - "20250:20250"
    depends_on:
      - app
    networks:
      - app-network

volumes:
  mysql_data:
  mysql_config:
  app_logs:
  elastic_data:
  elasticsearch_logs:

networks:
  app-network:
  elastic_network:
    driver: bridge

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  firebase_json:
    file: ./secrets/firebase.json
  elasticsearch_password:
    file: ./secrets/elasticsearch_password.txt
